apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  labels:
spec:
  replicas: 1
  selector:
    matchLabels:
      name: prometheus
  template:
    metadata:
      labels:
        name: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.9.2
        imagePullPolicy: IfNotPresent
        args:
        - --config.file=/etc/prometheus/prometheus-config.yaml
        - --web.listen-address=:9090
        - --web.enable-lifecycle
        - --web.external-url=/prometheus
        - --web.route-prefix=/
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
          readOnly: true
        - name: data-volume
          mountPath: /prometheus/data
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-config
      - name: data-volume
        emptyDir:
        #persistentVolumeClaim:
        #  claimName: prometheus-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
  annotations:
    # prometheus.io/scrape: "true"
spec:
  ports:
  - port: 9090
    name: prometheus
  selector:
    name: prometheus
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: monitoring
  name: prometheus
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefixStrip
spec:
  rules:
  - host: kube.noverit.com
    http:
      paths:
      - path: /prometheus
        backend:
          serviceName: prometheus
          servicePort: 9090
