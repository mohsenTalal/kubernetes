---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace:
  name: kube-web-view
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: kube-web-view
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs: [list, get]
- nonResourceURLs:
  - '*'
  verbs: [list, get]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: kube-web-view
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-web-view
subjects:
- kind: ServiceAccount
  name: kube-web-view
  namespace: cmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: kube-web-view
  name: kube-web-view
  namespace:
spec:
  replicas: 1
  selector:
    matchLabels:
      application: kube-web-view
  template:
    metadata:
      labels:
        application: kube-web-view
    spec:
      serviceAccountName: kube-web-view
      containers:
      - name: kube-web-view
        image: kalise/kube-web-view:latest
        args:
        - --port=8080
        # uncomment the following line to enable pod logs
        - --show-container-logs
        # uncomment the following line to unhide secret data
        - --show-secrets
        #Â env:
        #- name: OAUTH2_AUTHORIZE_URL
        #  value: https://github.com/login/oauth/authorize
        #- name: OAUTH2_ACCESS_TOKEN_URL
        #  value: https://github.com/login/oauth/access_token
        #- name: OAUTH2_CLIENT_ID
        #  value: <client_id>
        #- name: OAUTH2_CLIENT_SECRET
        #  value: <client_secret>                  
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
        resources:
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
---
apiVersion: v1
kind: Service
metadata:
  labels:
    application: kube-web-view
  name: kube-web-view
  namespace:
spec:
  selector:
    application: kube-web-view
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace:
  name: kube-web-view
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: view.noverit.com
    http:
      paths:
      - path: /
        backend:
          serviceName: kube-web-view
          servicePort: 80